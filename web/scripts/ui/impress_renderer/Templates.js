
		define(["vendor/amd/Handlebars"], function(Handlebars) {
			return {
		
"ComponentContainer": Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {  helpers = helpers || Handlebars.helpers; partials = partials || Handlebars.partials;  var buffer = "", stack1, foundHelper, self=this, helperMissing=helpers.helperMissing;function program1(depth0,data) {    var buffer = "";  return buffer;}function program3(depth0,data) {    var buffer = "";  return buffer;}function program5(depth0,data) {    var buffer = "", stack1, foundHelper;  buffer += "scale(";  stack1 = depth0.scale;  stack1 = stack1 == null || stack1 === false ? stack1 : stack1['x'];  foundHelper = helpers.round;  stack1 = foundHelper ? foundHelper.call(depth0, stack1, {hash:{},inverse:self.noop,fn:self.program(6, program6, data)}) : helperMissing.call(depth0, "round", stack1, {hash:{},inverse:self.noop,fn:self.program(6, program6, data)});  if(stack1 || stack1 === 0) { buffer += stack1; }  buffer += ", ";  stack1 = depth0.scale;  stack1 = stack1 == null || stack1 === false ? stack1 : stack1['y'];  foundHelper = helpers.round;  stack1 = foundHelper ? foundHelper.call(depth0, stack1, {hash:{},inverse:self.noop,fn:self.program(8, program8, data)}) : helperMissing.call(depth0, "round", stack1, {hash:{},inverse:self.noop,fn:self.program(8, program8, data)});  if(stack1 || stack1 === 0) { buffer += stack1; }  buffer += ")";  return buffer;}function program6(depth0,data) {    var buffer = "";  return buffer;}function program8(depth0,data) {    var buffer = "";  return buffer;}function program10(depth0,data) {    var buffer = "", stack1, foundHelper;  buffer += "scale(";  stack1 = depth0.scale;  stack1 = stack1 == null || stack1 === false ? stack1 : stack1['x'];  foundHelper = helpers.round;  stack1 = foundHelper ? foundHelper.call(depth0, stack1, {hash:{},inverse:self.noop,fn:self.program(11, program11, data)}) : helperMissing.call(depth0, "round", stack1, {hash:{},inverse:self.noop,fn:self.program(11, program11, data)});  if(stack1 || stack1 === 0) { buffer += stack1; }  buffer += ", ";  stack1 = depth0.scale;  stack1 = stack1 == null || stack1 === false ? stack1 : stack1['y'];  foundHelper = helpers.round;  stack1 = foundHelper ? foundHelper.call(depth0, stack1, {hash:{},inverse:self.noop,fn:self.program(13, program13, data)}) : helperMissing.call(depth0, "round", stack1, {hash:{},inverse:self.noop,fn:self.program(13, program13, data)});  if(stack1 || stack1 === 0) { buffer += stack1; }  buffer += ")";  return buffer;}function program11(depth0,data) {    var buffer = "";  return buffer;}function program13(depth0,data) {    var buffer = "";  return buffer;}function program15(depth0,data) {    var buffer = "", stack1, foundHelper;  buffer += "scale(";  stack1 = depth0.scale;  stack1 = stack1 == null || stack1 === false ? stack1 : stack1['x'];  foundHelper = helpers.round;  stack1 = foundHelper ? foundHelper.call(depth0, stack1, {hash:{},inverse:self.noop,fn:self.program(16, program16, data)}) : helperMissing.call(depth0, "round", stack1, {hash:{},inverse:self.noop,fn:self.program(16, program16, data)});  if(stack1 || stack1 === 0) { buffer += stack1; }  buffer += ", ";  stack1 = depth0.scale;  stack1 = stack1 == null || stack1 === false ? stack1 : stack1['y'];  foundHelper = helpers.round;  stack1 = foundHelper ? foundHelper.call(depth0, stack1, {hash:{},inverse:self.noop,fn:self.program(18, program18, data)}) : helperMissing.call(depth0, "round", stack1, {hash:{},inverse:self.noop,fn:self.program(18, program18, data)});  if(stack1 || stack1 === 0) { buffer += stack1; }  buffer += ")";  return buffer;}function program16(depth0,data) {    var buffer = "";  return buffer;}function program18(depth0,data) {    var buffer = "";  return buffer;}  buffer += "<div class=\"componentContainer\" style=\"top: ";  stack1 = depth0['y'];  foundHelper = helpers.round;  stack1 = foundHelper ? foundHelper.call(depth0, stack1, {hash:{},inverse:self.noop,fn:self.program(1, program1, data)}) : helperMissing.call(depth0, "round", stack1, {hash:{},inverse:self.noop,fn:self.program(1, program1, data)});  if(stack1 || stack1 === 0) { buffer += stack1; }  buffer += "px; left: ";  stack1 = depth0['x'];  foundHelper = helpers.round;  stack1 = foundHelper ? foundHelper.call(depth0, stack1, {hash:{},inverse:self.noop,fn:self.program(3, program3, data)}) : helperMissing.call(depth0, "round", stack1, {hash:{},inverse:self.noop,fn:self.program(3, program3, data)});  if(stack1 || stack1 === 0) { buffer += stack1; }  buffer += "px;-webkit-transform: ";  stack1 = depth0.scale;  stack1 = helpers['if'].call(depth0, stack1, {hash:{},inverse:self.noop,fn:self.program(5, program5, data)});  if(stack1 || stack1 === 0) { buffer += stack1; }  buffer += ";-moz-transform: ";  stack1 = depth0.scale;  stack1 = helpers['if'].call(depth0, stack1, {hash:{},inverse:self.noop,fn:self.program(10, program10, data)});  if(stack1 || stack1 === 0) { buffer += stack1; }  buffer += ";transform: ";  stack1 = depth0.scale;  stack1 = helpers['if'].call(depth0, stack1, {hash:{},inverse:self.noop,fn:self.program(15, program15, data)});  if(stack1 || stack1 === 0) { buffer += stack1; }  buffer += "\">";  stack1 = depth0;  stack1 = self.invokePartial(partials.TransformContainer, 'TransformContainer', stack1, helpers, partials);;  if(stack1 || stack1 === 0) { buffer += stack1; }  return buffer;}),
"Image": Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {  helpers = helpers || Handlebars.helpers; partials = partials || Handlebars.partials;  var buffer = "", stack1, foundHelper, self=this, functionType="function", escapeExpression=this.escapeExpression;  stack1 = depth0;  stack1 = self.invokePartial(partials.ComponentContainer, 'ComponentContainer', stack1, helpers, partials);;  if(stack1 || stack1 === 0) { buffer += stack1; }  buffer += "<img src=\"";  foundHelper = helpers.src;  if (foundHelper) { stack1 = foundHelper.call(depth0, {hash:{}}); }  else { stack1 = depth0.src; stack1 = typeof stack1 === functionType ? stack1() : stack1; }  buffer += escapeExpression(stack1) + "\"></img></div></div>";  return buffer;}),
"ImpressTemplate": Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {  helpers = helpers || Handlebars.helpers;  var buffer = "", stack1, foundHelper, self=this, helperMissing=helpers.helperMissing, functionType="function", escapeExpression=this.escapeExpression, blockHelperMissing=helpers.blockHelperMissing;function program1(depth0,data) {    var buffer = "";  return buffer;}function program3(depth0,data) {    var buffer = "", stack1, foundHelper;  buffer += "";  foundHelper = helpers.attributes;  if (foundHelper) { stack1 = foundHelper.call(depth0, {hash:{},inverse:self.noop,fn:self.program(4, program4, data)}); }  else { stack1 = depth0.attributes; stack1 = typeof stack1 === functionType ? stack1() : stack1; }  if (!helpers.attributes) { stack1 = blockHelperMissing.call(depth0, stack1, {hash:{},inverse:self.noop,fn:self.program(4, program4, data)}); }  if(stack1 || stack1 === 0) { buffer += stack1; }  buffer += "</div>";  return buffer;}function program4(depth0,data) {    var buffer = "", stack1, foundHelper;  buffer += "<div class=\"step\" data-x=\"";  stack1 = depth0['x'];  foundHelper = helpers.scaleX;  stack1 = foundHelper ? foundHelper.call(depth0, stack1, {hash:{},inverse:self.noop,fn:self.program(5, program5, data)}) : helperMissing.call(depth0, "scaleX", stack1, {hash:{},inverse:self.noop,fn:self.program(5, program5, data)});  if(stack1 || stack1 === 0) { buffer += stack1; }  buffer += "\" data-y=\"";  stack1 = depth0['y'];  foundHelper = helpers.scaleY;  stack1 = foundHelper ? foundHelper.call(depth0, stack1, {hash:{},inverse:self.noop,fn:self.program(7, program7, data)}) : helperMissing.call(depth0, "scaleY", stack1, {hash:{},inverse:self.noop,fn:self.program(7, program7, data)});  if(stack1 || stack1 === 0) { buffer += stack1; }  buffer += "\" ";  stack1 = depth0.rotateX;  stack1 = helpers['if'].call(depth0, stack1, {hash:{},inverse:self.noop,fn:self.program(9, program9, data)});  if(stack1 || stack1 === 0) { buffer += stack1; }  buffer += "  ";  stack1 = depth0.rotateY;  stack1 = helpers['if'].call(depth0, stack1, {hash:{},inverse:self.noop,fn:self.program(12, program12, data)});  if(stack1 || stack1 === 0) { buffer += stack1; }  buffer += " ";  stack1 = depth0.rotateZ;  stack1 = helpers['if'].call(depth0, stack1, {hash:{},inverse:self.noop,fn:self.program(15, program15, data)});  if(stack1 || stack1 === 0) { buffer += stack1; }  buffer += " ";  stack1 = depth0['z'];  stack1 = helpers['if'].call(depth0, stack1, {hash:{},inverse:self.noop,fn:self.program(18, program18, data)});  if(stack1 || stack1 === 0) { buffer += stack1; }  buffer += " ";  stack1 = depth0.impScale;  stack1 = helpers['if'].call(depth0, stack1, {hash:{},inverse:self.noop,fn:self.program(20, program20, data)});  if(stack1 || stack1 === 0) { buffer += stack1; }  buffer += "><div style=\"width: 1024px; height: 768px\">";  foundHelper = helpers.components;  if (foundHelper) { stack1 = foundHelper.call(depth0, {hash:{},inverse:self.noop,fn:self.program(22, program22, data)}); }  else { stack1 = depth0.components; stack1 = typeof stack1 === functionType ? stack1() : stack1; }  if (!helpers.components) { stack1 = blockHelperMissing.call(depth0, stack1, {hash:{},inverse:self.noop,fn:self.program(22, program22, data)}); }  if(stack1 || stack1 === 0) { buffer += stack1; }  buffer += "</div>";  return buffer;}function program5(depth0,data) {    var buffer = "";  return buffer;}function program7(depth0,data) {    var buffer = "";  return buffer;}function program9(depth0,data) {    var buffer = "", stack1, foundHelper;  buffer += "data-rotate-x=\"";  stack1 = depth0.rotateX;  foundHelper = helpers.toDeg;  stack1 = foundHelper ? foundHelper.call(depth0, stack1, {hash:{},inverse:self.noop,fn:self.program(10, program10, data)}) : helperMissing.call(depth0, "toDeg", stack1, {hash:{},inverse:self.noop,fn:self.program(10, program10, data)});  if(stack1 || stack1 === 0) { buffer += stack1; }  buffer += "\"";  return buffer;}function program10(depth0,data) {    var buffer = "";  return buffer;}function program12(depth0,data) {    var buffer = "", stack1, foundHelper;  buffer += "data-rotate-y=\"";  stack1 = depth0.rotateY;  foundHelper = helpers.toDeg;  stack1 = foundHelper ? foundHelper.call(depth0, stack1, {hash:{},inverse:self.noop,fn:self.program(13, program13, data)}) : helperMissing.call(depth0, "toDeg", stack1, {hash:{},inverse:self.noop,fn:self.program(13, program13, data)});  if(stack1 || stack1 === 0) { buffer += stack1; }  buffer += "\"";  return buffer;}function program13(depth0,data) {    var buffer = "";  return buffer;}function program15(depth0,data) {    var buffer = "", stack1, foundHelper;  buffer += "data-rotate-z=\"";  stack1 = depth0.rotateZ;  foundHelper = helpers.toDeg;  stack1 = foundHelper ? foundHelper.call(depth0, stack1, {hash:{},inverse:self.noop,fn:self.program(16, program16, data)}) : helperMissing.call(depth0, "toDeg", stack1, {hash:{},inverse:self.noop,fn:self.program(16, program16, data)});  if(stack1 || stack1 === 0) { buffer += stack1; }  buffer += "\"";  return buffer;}function program16(depth0,data) {    var buffer = "";  return buffer;}function program18(depth0,data) {    var buffer = "", stack1, foundHelper;  buffer += "data-z=\"";  foundHelper = helpers['z'];  if (foundHelper) { stack1 = foundHelper.call(depth0, {hash:{}}); }  else { stack1 = depth0['z']; stack1 = typeof stack1 === functionType ? stack1() : stack1; }  buffer += escapeExpression(stack1) + "\"";  return buffer;}function program20(depth0,data) {    var buffer = "", stack1, foundHelper;  buffer += "data-scale=\"";  foundHelper = helpers.impScale;  if (foundHelper) { stack1 = foundHelper.call(depth0, {hash:{}}); }  else { stack1 = depth0.impScale; stack1 = typeof stack1 === functionType ? stack1() : stack1; }  buffer += escapeExpression(stack1) + "\"";  return buffer;}function program22(depth0,data) {    var buffer = "", stack1, foundHelper;  buffer += "";  foundHelper = helpers.renderComponent;  stack1 = foundHelper ? foundHelper.call(depth0, depth0, {hash:{},inverse:self.noop,fn:self.program(23, program23, data)}) : helperMissing.call(depth0, "renderComponent", depth0, {hash:{},inverse:self.noop,fn:self.program(23, program23, data)});  if(stack1 || stack1 === 0) { buffer += stack1; }  buffer += "";  return buffer;}function program23(depth0,data) {    var buffer = "";  return buffer;}function program25(depth0,data) {    var buffer = "";  buffer += "<script>var interval = ";  depth0 = typeof depth0 === functionType ? depth0() : depth0;  buffer += escapeExpression(depth0) + ";if (interval >= 1000) {    setInterval(function() {        impress().next();    }, interval);}</script>";  return buffer;}  buffer += "<head><meta charset=\"utf-8\" /><meta name=\"viewport\" content=\"width=1024\" /><meta name=\"apple-mobile-web-app-capable\" content=\"yes\" /><title>Deck Title</title><meta name=\"description\" content=\"TODO\" /><meta name=\"author\" content=\"TODO\" /><style>.componentContainer {    position: absolute;    -webkit-transform-origin: 0 0;    -moz-transform-origin: 0 0;    transform-origin: 0 0;}.bg {    width: 100%;    height: 100%;}</style><link href=\"preview_export/css/main.css\" rel=\"stylesheet\" /><link href='preview_export/css/web-fonts.css' rel='stylesheet' type='text/css'><link rel=\"shortcut icon\" href=\"favicon.png\" /><link rel=\"apple-touch-icon\" href=\"apple-touch-icon.png\" /></head><body class=\"impress-not-supported\"><!-- This is a work around / hack to get the user's browser to download the fonts  if they decide to save the presentation. --><div style=\"visibility: hidden; width: 0px; height: 0px\"><img src=\"preview_export/css/Lato-Bold.woff\" /><img src=\"preview_export/css/HammersmithOne.woff\" /><img src=\"preview_export/css/Gorditas-Regular.woff\" /><img src=\"preview_export/css/FredokaOne-Regular.woff\" /><img src=\"preview_export/css/Ubuntu.woff\" /><img src=\"preview_export/css/Ubuntu-Bold.woff\" /><img src=\"preview_export/css/PressStart2P-Regular.woff\" /><img src=\"preview_export/css/Lato-BoldItalic.woff\" /><img src=\"preview_export/css/AbrilFatface-Regular.woff\" /><img src=\"preview_export/css/Lato-Regular.woff\" /></div><div class=\"fallback-message\">    <p>Your browser <b>doesn't support the features required</b> by impress.js, so you are presented with a simplified version of this presentation.</p>    <p>For the best experience please use the latest <b>Chrome</b>, <b>Safari</b> or <b>Firefox</b> browser.</p></div><div class=\"bg\" style=\"";  stack1 = depth0.background;  stack1 = stack1 == null || stack1 === false ? stack1 : stack1.styles;  foundHelper = helpers.extractBG;  stack1 = foundHelper ? foundHelper.call(depth0, stack1, {hash:{},inverse:self.noop,fn:self.program(1, program1, data)}) : helperMissing.call(depth0, "extractBG", stack1, {hash:{},inverse:self.noop,fn:self.program(1, program1, data)});  if(stack1 || stack1 === 0) { buffer += stack1; }  buffer += "\"><div id=\"impress\">";  stack1 = depth0.slides;  stack1 = stack1 == null || stack1 === false ? stack1 : stack1.models;  stack1 = typeof stack1 === functionType ? stack1() : stack1;  stack1 = stack1 = blockHelperMissing.call(depth0, stack1, {hash:{},inverse:self.noop,fn:self.program(3, program3, data)});  if(stack1 || stack1 === 0) { buffer += stack1; }  buffer += "</div><div class=\"hint\">    <p>Use a spacebar or arrow keys to navigate</p></div><script>if (\"ontouchstart\" in document.documentElement) {     document.querySelector(\".hint\").innerHTML = \"<p>Tap on the left or right to navigate</p>\";}</script>";  foundHelper = helpers.interval;  if (foundHelper) { stack1 = foundHelper.call(depth0, {hash:{},inverse:self.noop,fn:self.program(25, program25, data)}); }  else { stack1 = depth0.interval; stack1 = typeof stack1 === functionType ? stack1() : stack1; }  if (!helpers.interval) { stack1 = blockHelperMissing.call(depth0, stack1, {hash:{},inverse:self.noop,fn:self.program(25, program25, data)}); }  if(stack1 || stack1 === 0) { buffer += stack1; }  buffer += "</div><script type=\"text/javascript\" src=\"preview_export/scripts/impress.js\"></script><script>if (!window.impressStarted) {    startImpress(document, window);    impress().init();   }</script></body>";  return buffer;}),
"SVGContainer": Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {  helpers = helpers || Handlebars.helpers; partials = partials || Handlebars.partials;  var buffer = "", stack1, foundHelper, functionType="function", escapeExpression=this.escapeExpression, self=this;  buffer += "<div class=\"componentContainer\" style=\"top: ";  foundHelper = helpers['y'];  if (foundHelper) { stack1 = foundHelper.call(depth0, {hash:{}}); }  else { stack1 = depth0['y']; stack1 = typeof stack1 === functionType ? stack1() : stack1; }  buffer += escapeExpression(stack1) + "px; left: ";  foundHelper = helpers['x'];  if (foundHelper) { stack1 = foundHelper.call(depth0, {hash:{}}); }  else { stack1 = depth0['x']; stack1 = typeof stack1 === functionType ? stack1() : stack1; }  buffer += escapeExpression(stack1) + "px; width: ";  stack1 = depth0.scale;  stack1 = stack1 == null || stack1 === false ? stack1 : stack1.width;  stack1 = typeof stack1 === functionType ? stack1() : stack1;  buffer += escapeExpression(stack1) + "px; height: ";  stack1 = depth0.scale;  stack1 = stack1 == null || stack1 === false ? stack1 : stack1.height;  stack1 = typeof stack1 === functionType ? stack1() : stack1;  buffer += escapeExpression(stack1) + "px;\">";  stack1 = depth0;  stack1 = self.invokePartial(partials.TransformContainer, 'TransformContainer', stack1, helpers, partials);;  if(stack1 || stack1 === 0) { buffer += stack1; }  return buffer;}),
"SVGImage": Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {  helpers = helpers || Handlebars.helpers; partials = partials || Handlebars.partials;  var buffer = "", stack1, foundHelper, self=this, functionType="function", escapeExpression=this.escapeExpression;  stack1 = depth0;  stack1 = self.invokePartial(partials.SVGContainer, 'SVGContainer', stack1, helpers, partials);;  if(stack1 || stack1 === 0) { buffer += stack1; }  buffer += "<img src=\"";  foundHelper = helpers.src;  if (foundHelper) { stack1 = foundHelper.call(depth0, {hash:{}}); }  else { stack1 = depth0.src; stack1 = typeof stack1 === functionType ? stack1() : stack1; }  buffer += escapeExpression(stack1) + "\" style=\"width: 100%; height: 100%\"></img></div></div>";  return buffer;}),
"TextBox": Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {  helpers = helpers || Handlebars.helpers; partials = partials || Handlebars.partials;  var buffer = "", stack1, foundHelper, self=this, functionType="function", escapeExpression=this.escapeExpression;  stack1 = depth0;  stack1 = self.invokePartial(partials.ComponentContainer, 'ComponentContainer', stack1, helpers, partials);;  if(stack1 || stack1 === 0) { buffer += stack1; }  buffer += "<div style=\"font-family: ";  foundHelper = helpers.family;  if (foundHelper) { stack1 = foundHelper.call(depth0, {hash:{}}); }  else { stack1 = depth0.family; stack1 = typeof stack1 === functionType ? stack1() : stack1; }  buffer += escapeExpression(stack1) + "; font-size: ";  foundHelper = helpers.size;  if (foundHelper) { stack1 = foundHelper.call(depth0, {hash:{}}); }  else { stack1 = depth0.size; stack1 = typeof stack1 === functionType ? stack1() : stack1; }  buffer += escapeExpression(stack1) + "px;			font-weight: ";  foundHelper = helpers.weight;  if (foundHelper) { stack1 = foundHelper.call(depth0, {hash:{}}); }  else { stack1 = depth0.weight; stack1 = typeof stack1 === functionType ? stack1() : stack1; }  buffer += escapeExpression(stack1) + "; font-style: ";  foundHelper = helpers.style;  if (foundHelper) { stack1 = foundHelper.call(depth0, {hash:{}}); }  else { stack1 = depth0.style; stack1 = typeof stack1 === functionType ? stack1() : stack1; }  buffer += escapeExpression(stack1) + "; color: #";  foundHelper = helpers.color;  if (foundHelper) { stack1 = foundHelper.call(depth0, {hash:{}}); }  else { stack1 = depth0.color; stack1 = typeof stack1 === functionType ? stack1() : stack1; }  buffer += escapeExpression(stack1) + ";			text-decoration: ";  foundHelper = helpers.decoration;  if (foundHelper) { stack1 = foundHelper.call(depth0, {hash:{}}); }  else { stack1 = depth0.decoration; stack1 = typeof stack1 === functionType ? stack1() : stack1; }  buffer += escapeExpression(stack1) + "; text-align: ";  foundHelper = helpers.align;  if (foundHelper) { stack1 = foundHelper.call(depth0, {hash:{}}); }  else { stack1 = depth0.align; stack1 = typeof stack1 === functionType ? stack1() : stack1; }  buffer += escapeExpression(stack1) + "\">";  foundHelper = helpers.text;  if (foundHelper) { stack1 = foundHelper.call(depth0, {hash:{}}); }  else { stack1 = depth0.text; stack1 = typeof stack1 === functionType ? stack1() : stack1; }  buffer += escapeExpression(stack1) + "</div></div></div>";  return buffer;}),
"TransformContainer": Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {  helpers = helpers || Handlebars.helpers;  var buffer = "", stack1, functionType="function", escapeExpression=this.escapeExpression, self=this;function program1(depth0,data) {    var buffer = "", stack1, foundHelper;  buffer += "rotate(";  foundHelper = helpers.rotate;  if (foundHelper) { stack1 = foundHelper.call(depth0, {hash:{}}); }  else { stack1 = depth0.rotate; stack1 = typeof stack1 === functionType ? stack1() : stack1; }  buffer += escapeExpression(stack1) + "rad)";  return buffer;}function program3(depth0,data) {    var buffer = "", stack1, foundHelper;  buffer += "skewX(";  foundHelper = helpers.skewX;  if (foundHelper) { stack1 = foundHelper.call(depth0, {hash:{}}); }  else { stack1 = depth0.skewX; stack1 = typeof stack1 === functionType ? stack1() : stack1; }  buffer += escapeExpression(stack1) + "rad)";  return buffer;}function program5(depth0,data) {    var buffer = "", stack1, foundHelper;  buffer += "skewY(";  foundHelper = helpers.skewY;  if (foundHelper) { stack1 = foundHelper.call(depth0, {hash:{}}); }  else { stack1 = depth0.skewY; stack1 = typeof stack1 === functionType ? stack1() : stack1; }  buffer += escapeExpression(stack1) + "rad)";  return buffer;}function program7(depth0,data) {    var buffer = "", stack1, foundHelper;  buffer += "rotate(";  foundHelper = helpers.rotate;  if (foundHelper) { stack1 = foundHelper.call(depth0, {hash:{}}); }  else { stack1 = depth0.rotate; stack1 = typeof stack1 === functionType ? stack1() : stack1; }  buffer += escapeExpression(stack1) + "rad)";  return buffer;}function program9(depth0,data) {    var buffer = "", stack1, foundHelper;  buffer += "skewX(";  foundHelper = helpers.skewX;  if (foundHelper) { stack1 = foundHelper.call(depth0, {hash:{}}); }  else { stack1 = depth0.skewX; stack1 = typeof stack1 === functionType ? stack1() : stack1; }  buffer += escapeExpression(stack1) + "rad)";  return buffer;}function program11(depth0,data) {    var buffer = "", stack1, foundHelper;  buffer += "skewY(";  foundHelper = helpers.skewY;  if (foundHelper) { stack1 = foundHelper.call(depth0, {hash:{}}); }  else { stack1 = depth0.skewY; stack1 = typeof stack1 === functionType ? stack1() : stack1; }  buffer += escapeExpression(stack1) + "rad)";  return buffer;}function program13(depth0,data) {    var buffer = "", stack1, foundHelper;  buffer += "rotate(";  foundHelper = helpers.rotate;  if (foundHelper) { stack1 = foundHelper.call(depth0, {hash:{}}); }  else { stack1 = depth0.rotate; stack1 = typeof stack1 === functionType ? stack1() : stack1; }  buffer += escapeExpression(stack1) + "rad)";  return buffer;}function program15(depth0,data) {    var buffer = "", stack1, foundHelper;  buffer += "skewX(";  foundHelper = helpers.skewX;  if (foundHelper) { stack1 = foundHelper.call(depth0, {hash:{}}); }  else { stack1 = depth0.skewX; stack1 = typeof stack1 === functionType ? stack1() : stack1; }  buffer += escapeExpression(stack1) + "rad)";  return buffer;}function program17(depth0,data) {    var buffer = "", stack1, foundHelper;  buffer += "skewY(";  foundHelper = helpers.skewY;  if (foundHelper) { stack1 = foundHelper.call(depth0, {hash:{}}); }  else { stack1 = depth0.skewY; stack1 = typeof stack1 === functionType ? stack1() : stack1; }  buffer += escapeExpression(stack1) + "rad)";  return buffer;}  buffer += "<div class=\"transformContainer\" style=\"-webkit-transform: ";  stack1 = depth0.rotate;  stack1 = helpers['if'].call(depth0, stack1, {hash:{},inverse:self.noop,fn:self.program(1, program1, data)});  if(stack1 || stack1 === 0) { buffer += stack1; }  buffer += " ";  stack1 = depth0.skewX;  stack1 = helpers['if'].call(depth0, stack1, {hash:{},inverse:self.noop,fn:self.program(3, program3, data)});  if(stack1 || stack1 === 0) { buffer += stack1; }  buffer += " ";  stack1 = depth0.skewY;  stack1 = helpers['if'].call(depth0, stack1, {hash:{},inverse:self.noop,fn:self.program(5, program5, data)});  if(stack1 || stack1 === 0) { buffer += stack1; }  buffer += "; -moz-transform: ";  stack1 = depth0.rotate;  stack1 = helpers['if'].call(depth0, stack1, {hash:{},inverse:self.noop,fn:self.program(7, program7, data)});  if(stack1 || stack1 === 0) { buffer += stack1; }  buffer += " ";  stack1 = depth0.skewX;  stack1 = helpers['if'].call(depth0, stack1, {hash:{},inverse:self.noop,fn:self.program(9, program9, data)});  if(stack1 || stack1 === 0) { buffer += stack1; }  buffer += " ";  stack1 = depth0.skewY;  stack1 = helpers['if'].call(depth0, stack1, {hash:{},inverse:self.noop,fn:self.program(11, program11, data)});  if(stack1 || stack1 === 0) { buffer += stack1; }  buffer += "; transform: ";  stack1 = depth0.rotate;  stack1 = helpers['if'].call(depth0, stack1, {hash:{},inverse:self.noop,fn:self.program(13, program13, data)});  if(stack1 || stack1 === 0) { buffer += stack1; }  buffer += " ";  stack1 = depth0.skewX;  stack1 = helpers['if'].call(depth0, stack1, {hash:{},inverse:self.noop,fn:self.program(15, program15, data)});  if(stack1 || stack1 === 0) { buffer += stack1; }  buffer += " ";  stack1 = depth0.skewY;  stack1 = helpers['if'].call(depth0, stack1, {hash:{},inverse:self.noop,fn:self.program(17, program17, data)});  if(stack1 || stack1 === 0) { buffer += stack1; }  buffer += "\">";  return buffer;}),
"Video": Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {  helpers = helpers || Handlebars.helpers; partials = partials || Handlebars.partials;  var buffer = "", stack1, foundHelper, self=this, functionType="function", escapeExpression=this.escapeExpression;  stack1 = depth0;  stack1 = self.invokePartial(partials.ComponentContainer, 'ComponentContainer', stack1, helpers, partials);;  if(stack1 || stack1 === 0) { buffer += stack1; }  buffer += "<video controls>	<source src=\"";  foundHelper = helpers.src;  if (foundHelper) { stack1 = foundHelper.call(depth0, {hash:{}}); }  else { stack1 = depth0.src; stack1 = typeof stack1 === functionType ? stack1() : stack1; }  buffer += escapeExpression(stack1) + "\" type=\"";  foundHelper = helpers.videoType;  if (foundHelper) { stack1 = foundHelper.call(depth0, {hash:{}}); }  else { stack1 = depth0.videoType; stack1 = typeof stack1 === functionType ? stack1() : stack1; }  buffer += escapeExpression(stack1) + "\"></source></video></div></div>";  return buffer;})
}});